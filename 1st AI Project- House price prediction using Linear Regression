import numpy as np
import pandas as pd
import matplotlib
import matplotlib.pyplot as plt
import sklearn
from sklearn import datasets, linear_model, metrics
import seaborn as sb
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split
from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.linear_model import LinearRegression

#Loading the dataset
train_df=pd.read_csv('/kaggle/input/house-prices-advanced-regression-techniques/train.csv')
test_df=pd.read_csv('/kaggle/input/house-prices-advanced-regression-techniques/test.csv')
test_ids=test_df['Id']

#Separating target from input
X=train_df.drop(columns=["SalePrice", "Id"])
y=train_df["SalePrice"]
X_train, X_test, y_train, y_test=train_test_split(X,y, test_size=0.1, random_state=42)


#Identifying categorical and numerical values
Categorical_cols=X.select_dtypes(include='object').columns
Numerical_cols=X.select_dtypes(exclude='object').columns

#Preprocessing Pipeline
numeric_transformer=Pipeline([('imputer', SimpleImputer(strategy='median')), ('scaler', StandardScaler())])
categorical_transformer=Pipeline([('imputer', SimpleImputer(strategy='constant', fill_value='missing')), 
                                 ('encoder', OneHotEncoder(handle_unknown='ignore'))])

preprocessor=ColumnTransformer([('num', numeric_transformer, Numerical_cols),
                               ('cat', categorical_transformer, Categorical_cols)])

#Full Model Pipeline
model=Pipeline([('preprocess', preprocessor),('regressor', LinearRegression())])

model.fit(X_train,y_train)
y_pred=model.predict(X_test)

rmse=mean_squared_error(y_test, y_pred, squared=False)
r2=r2_score(y_test, y_pred)

print(f"RMS Test Score: {rmse:.3f}")
print(f"R2 Test Score: {r2:.4f}")

submission=pd.DataFrame({'SalePrice': y_pred})
submission.to_csv('submission.csv', index=False)
